package org.wildfly.swarm.plugin;

import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.Properties;

import org.apache.maven.plugin.logging.Log;
import org.apache.maven.project.MavenProject;

/**
 * @author Bob McWhirter
 */
public class PropertiesGenerator {

    private final Log log;
    private final MavenProject project;

    public PropertiesGenerator(Log log, MavenProject project) {
        this.log = log;
        this.project = project;
    }

    public void execute() throws IOException {
        if ( ! FractionDetector.isFraction( this.project ) ) {
            return;
        }

        Properties props = new Properties();

        StabilityLevel stabilityLevel = StabilityLevel.of( this.project );

        props.put( "groupId", this.project.getGroupId() );
        props.put( "artifactId", this.project.getArtifactId() );
        props.put( "version", this.project.getVersion() );
        props.put( "name", this.project.getName() );
        props.put( "description", this.project.getDescription() );
        props.put( "stabilityLevel", stabilityLevel.toString() );
        props.put( "stabilityIndex", stabilityLevel.ordinal() + "" );

        Path file = Paths.get(this.project.getBuild().getOutputDirectory(), "META-INF", "fraction.properties");
        Files.createDirectories(file.getParent());
        try ( OutputStream out = new FileOutputStream( file.toFile() ) ) {
            props.store(out, "generated by wildfly-swarm-fraction-plugin");
        }
    }
}
